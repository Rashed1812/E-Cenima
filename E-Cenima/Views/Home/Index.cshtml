@using BLL.DTO.Movie
@model ICollection<MovieDto>
@{
    ViewData["Title"] = "Home Page";
}

<div style="background-color: var(--dark-bg); color: var(--accent-color);">
    <div class="container main py-5">

        <section class="welcome-section">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-6">
                        <div class="welcome-content">
                            <h1 class="welcome-title">Welcome to EZ Cinema</h1>
                            <p class="welcome-text">
                                Book tickets for the latest blockbusters in just a few clicks!
                                Enjoy the ultimate movie experience with comfortable seating,
                                state-of-the-art sound, and crystal-clear projection at our cinemas.
                            </p>
                            <div class="d-flex flex-wrap gap-3">
                                <a asp-controller="Movies" asp-action="Index" class="btn btn-custom btn-lg">
                                    Book Now <i class="bi bi-ticket-perforated ms-2"></i>
                                </a>
                                <a href="#Movies" class="btn btn-View btn-lg">
                                    View Movies <i class="bi bi-film ms-2"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 d-none d-lg-block">
                        <img src="https://images.unsplash.com/photo-1536440136628-849c177e76a1?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
                             alt="Movie theater" class="img-fluid welcome-image">
                    </div>
                </div>
            </div>
        </section>

        <section class="movie-details-section">
            <div class="container">
                <h2 class="section-title">Current Featured Film</h2>

                @if (Model.Any())
                {
                    var featuredMovie = Model.First();
                    <div class="row g-4">
                        <!-- Featured Movie Card -->
                        <div class="col-lg-12">
                            <div class="movie-card">
                                <div class="row g-0">
                                    <!-- Movie Poster Column -->
                                    <div class="col-md-4">
                                        <img src="@featuredMovie.ImageURL"
                                             class="movie-poster img-fluid w-100"
                                             alt="@featuredMovie.Name">
                                    </div>

                                    <!-- Movie Info Column -->
                                    <div class="col-md-8">
                                        <div class="movie-info">
                                            <h3 class="movie-title">@featuredMovie.Name</h3>

                                            <div class="movie-meta">
                                                <div class="movie-meta-item">
                                                    <i class="bi bi-calendar-date"></i>
                                                    <span>@featuredMovie.ReleaseDate.ToString("yyyy-MM-dd")</span>
                                                </div>
                                                <div class="movie-meta-item">
                                                    <i class="bi bi-tags"></i>
                                                    <span class="badge badge-category">@featuredMovie.MovieCategory</span>
                                                </div>
                                                <div class="movie-meta-item">
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                    <span>4.8/5</span> <!-- Static rating for demo -->
                                                </div>
                                            </div>

                                            <p class="movie-description">
                                                @featuredMovie.Description
                                            </p>

                                            <div class="d-flex flex-wrap gap-3 align-items-center">
                                                <a asp-controller="Movie" asp-action="Details" asp-route-id="@featuredMovie.Id" class="btn btn-booking">
                                                    Book Tickets <i class="bi bi-ticket-perforated ms-2"></i>
                                                </a>
                                                <button class="btn  text-primary favorite-btn" data-movie-id="@featuredMovie.Name" onclick="toggleFavorite(this)">
                                                    <i class="p-1 bi @(IsFavorite(featuredMovie.Name) ? " bi-heart-fill" : " bi-heart")"></i>Add to Watchlist
                                                </button>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Trailer Section -->
                        @if (!string.IsNullOrEmpty(featuredMovie.TrailerURL))
                        {
                            <div class="col-lg-12 mt-4">
                                <div class="movie-card">
                                    <div class="trailer-container">
                                        <iframe src="https://www.youtube.com/embed/@featuredMovie.TrailerURL"
                                                frameborder="0"
                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                allowfullscreen></iframe>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </section>
        <h1 id="Movies" class="text-center mb-4">Our Movie Collection</h1>


        <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (MovieDto movie in Model)
            {
                <div class="col">
                    <div class="card h-100 border-0" style="background-color: var(--secondary-color);">
                        <img src="@movie.ImageURL" class="card-img-top" alt="@movie.Name" style="height: 300px; object-fit: contain;">
                        <div class="card-body">
                            <h5 class="card-title">@movie.Name</h5>
                            <span class="badge bg-danger mb-2">@movie.MovieCategory</span>
                            <p class="card-text">
                                <small class="text-muted">
                                    Released: @movie.ReleaseDate.ToString("MMMM dd, yyyy")
                                </small>
                            </p>
                            @* <p class="card-text">@(movie.Description.Length > 100 ? movie.Description.Substring(0, 100) + "..." : movie.Description)</p> *@
                        </div>
                        <div class="card-footer bg-transparent border-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <a asp-controller ="Movie" asp-action="Details" asp-route-id="@movie.Id" class="btn btn-sm" style="background-color: var(--primary-color); color: var(--light-bg);">
                                    Go to Details</a>
                                @if (!string.IsNullOrEmpty(movie.TrailerURL))
                                {
                                    <a href="@movie.TrailerURL" target="_blank" class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-play-fill"></i> Trailer
                                    </a>
                                }
                                <button class="btn btn-sm text-warning favorite-btn" data-movie-id="@movie.Name" onclick="toggleFavorite(this)">
                                    <i class="bi @(IsFavorite(movie.Name) ? "bi-heart-fill" : "bi-heart")"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    </div>
    <style>
      

        .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 0 20px rgba(229, 9, 20, 0.5);
        }

        .card-img-top {
            border-bottom: 2px solid var(--primary-color);
        }

        .btn-danger {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }

        .btn-danger:hover {
            background-color: var(--primary-color);
            color: var(--light-bg);
        }

    .welcome-section {
        background-position: center;
        color: var(--welcome-text-color);
        padding: 5rem 0;
        min-height: 80vh;
        display: flex;
        align-items: center;
    }

    .welcome-content {
        max-width: 600px;
    }

    .welcome-title {
        font-size: 3.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .welcome-text {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        line-height: 1.6;
    }

    .btn-custom {
        background-color: var(--primary-color);
        color: white;
        padding: 0.75rem 2rem;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-custom:hover {
            background-color: #c11119;
            color: white;
            transform: translateY(-2px);
        }

    .btn-View {
        background-color: var(--accent-color);
        color: var(--secondary-color);
        padding: 0.75rem 2rem;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-View:hover {
            background-color: transparent;
            border: 1px solid var(--accent-color);
            color: var(--accent-color);
            transform: translateY(-2px);
        }

    .welcome-image {
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s;
    }

        .welcome-image:hover {
            transform: scale(1.03);
        }
    /* Movie Details Section */
    .movie-details-section {
        padding: 4rem 0;
        background-color: var(--bg-color);
    }

    .movie-card {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s;
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
    }

        .movie-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }

    .movie-poster {
        height: 100%;
        object-fit: cover;
        width: 100%;
    }

    .trailer-container {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        height: 0;
        overflow: hidden;
        background-color: #000;
    }

        .trailer-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
        }

    .movie-info {
        padding: 2rem;
    }

    .movie-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 1rem;
    }

    .movie-meta {
        display: flex;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .movie-meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--meta-color);
    }

    .movie-description {
        line-height: 1.7;
        margin-bottom: 2rem;
        color: var(--text-color);
    }

    .badge-category {
        background-color: var(--primary-color);
        color: white;
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 20px;
    }

    .btn-booking {
        background-color: var(--primary-color);
        color: white;
        padding: 0.75rem 2rem;
        font-weight: 600;
        border: none;
        transition: all 0.3s;
    }

        .btn-booking:hover {
            background-color: #c11119;
            color: white;
            transform: translateY(-2px);
        }

    .text-primary {
        color: var(--primary-color) !important;
        transition: all 0.3s;
    }

        .text-primary:hover {
            opacity: 0.8;
        }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 3rem;
        color: var(--section-title-color);
        text-align: center;
        position: relative;
    }

        .section-title:after {
            content: "";
            display: block;
            width: 80px;
            height: 4px;
            background: var(--primary-color);
            margin: 15px auto;
        }

    </style>

<script>
    function toggleFavorite(button) {
        const movieId = button.getAttribute('data-movie-id');
        const icon = button.querySelector('i');
        let favorites = JSON.parse(localStorage.getItem('favoriteMovies') || '[]');

        if (favorites.includes(movieId)) {
            favorites = favorites.filter(id => id !== movieId);
            icon.classList.remove('bi-heart-fill');
            icon.classList.add('bi-heart');
        } else {
            favorites.push(movieId);
            icon.classList.remove('bi-heart');
            icon.classList.add('bi-heart-fill');
        }

        localStorage.setItem('favoriteMovies', JSON.stringify(favorites));
            window.dispatchEvent(new CustomEvent('favoriteUpdated'));

    }

    document.addEventListener('DOMContentLoaded', () => {
        const favoriteButtons = document.querySelectorAll('.favorite-btn');
        favoriteButtons.forEach(button => {
            const movieId = button.getAttribute('data-movie-id');
            const icon = button.querySelector('i');
            const favorites = JSON.parse(localStorage.getItem('favoriteMovies') || '[]');
            if (favorites.includes(movieId)) {
                icon.classList.remove('bi-heart');
                icon.classList.add('bi-heart-fill');
            }
        });
    });
</script>
@functions {
    private bool IsFavorite(string movieId)
    {
        // This function is used server-side to set initial icon state
        // In a real app, you might check against a user's favorites in a database
        // Here, it's a placeholder since localStorage isn't accessible server-side
        return false; // Default to non-favorited on initial render
    }
}